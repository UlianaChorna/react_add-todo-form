{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/getUser.ts","api/todos.ts","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["UserInfo","_ref","user","email","name","_jsx","className","href","concat","children","TodoInfo","todo","id","title","completed","_jsxs","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","TodoForm","onSubmit","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setUserId","_useState5","_useState6","userNameError","setUserNameError","_useState7","_useState8","hasTitleError","setHasTitleError","event","preventDefault","action","method","htmlFor","type","placeholder","onChange","target","value","disabled","usersFormServer","initialTodo","_objectSpread","getNewTodoId","Math","max","apply","_toConsumableArray","App","setTodos","newTodo","currentTodo","ReactDOM","render","document","getElementById"],"mappings":"4NAYaA,EAA4B,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAClCC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,OACEC,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYL,GAAQM,SAC7CL,KCFMM,EAA4B,SAAHT,GAAkB,IAAZU,EAAIV,EAAJU,KAExCT,EAIES,EAJFT,KACAU,EAGED,EAHFC,GACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,UAGF,OACEC,eAAA,WAAS,UAASH,EAAIN,UAAS,aAAAE,OAAeM,GAAa,uBAAwBL,SAAA,CACjFJ,cAAA,MAAIC,UAAU,kBAAiBG,SAAEI,IAE/BX,GAAQG,cAACL,EAAQ,CAACE,KAAMA,QCpBnBc,EAA4B,SAAHf,GAAmB,IAAbgB,EAAKhB,EAALgB,MAC1C,OACEZ,cAAA,WAASC,UAAU,WAAUG,SAC1BQ,EAAMC,KAAI,SAAAP,GAAI,OACbN,cAACK,EAAQ,CAAeC,KAAMA,GAAfA,EAAKC,UCXb,GACb,CACEA,GAAI,EACJR,KAAM,gBACNe,SAAU,OACVhB,MAAO,qBAET,CACES,GAAI,EACJR,KAAM,eACNe,SAAU,YACVhB,MAAO,qBAET,CACES,GAAI,EACJR,KAAM,mBACNe,SAAU,WACVhB,MAAO,sBAET,CACES,GAAI,EACJR,KAAM,mBACNe,SAAU,WACVhB,MAAO,6BAET,CACES,GAAI,EACJR,KAAM,mBACNe,SAAU,SACVhB,MAAO,4BAET,CACES,GAAI,EACJR,KAAM,uBACNe,SAAU,mBACVhB,MAAO,2BAET,CACES,GAAI,EACJR,KAAM,kBACNe,SAAU,eACVhB,MAAO,0BAET,CACES,GAAI,EACJR,KAAM,2BACNe,SAAU,gBACVhB,MAAO,wBAET,CACES,GAAI,EACJR,KAAM,kBACNe,SAAU,WACVhB,MAAO,2BAET,CACES,GAAI,GACJR,KAAM,qBACNe,SAAU,iBACVhB,MAAO,2BCzDJ,SAASiB,EAAYC,GAC1B,OAAOC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKU,KAAOS,MAC3C,KCJQ,ICSFG,EAA4B,SAAHvB,GAAsB,IAAhBwB,EAAQxB,EAARwB,SAC1CC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/Bb,EAAKe,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA4BJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAAhCV,EAAMW,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAA0CP,oBAAS,GAAMQ,EAAAN,YAAAK,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAA0CX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAkCtC,OACExB,eAAA,QACEU,SAlCiB,SAACiB,GACpBA,EAAMC,iBAENF,GAAkB5B,GAClBwB,GAAkBhB,GAEbR,GAAUQ,IAIfI,EAAS,CACPb,GAAI,EACJC,QACAC,WAAW,EACXO,SACAnB,KAAMkB,EAAYC,KAGpBS,EAAS,IACTG,EAAU,KAgBRW,OAAO,aACPC,OAAO,OAAMpC,SAAA,CAEbM,eAAA,OAAKT,UAAU,QAAOG,SAAA,CACpBJ,cAAA,SAAOyC,QAAQ,YAAWrC,SAAC,WAC3BJ,cAAA,SACE0C,KAAK,OACL,UAAQ,aACRnC,GAAG,YACHoC,YAAY,gBACZC,SAvBkB,SAACP,GACzBZ,EAASY,EAAMQ,OAAOC,OACtBV,GAAiB,IAsBXU,MAAOtC,IAGR2B,GACCnC,cAAA,QAAMC,UAAU,QAAOG,SAAC,4BAI5BM,eAAA,OAAKT,UAAU,QAAOG,SAAA,CACpBJ,cAAA,SAAOyC,QAAQ,aAAYrC,SAAC,UAC5BM,eAAA,UACEH,GAAG,aACH,UAAQ,aACRuC,MAAO9B,EACP4B,SAjCiB,SAACP,GACxBT,GAAWS,EAAMQ,OAAOC,OACxBd,GAAiB,IA+BgB5B,SAAA,CAE3BJ,cAAA,UAAQ8C,MAAM,IAAIC,UAAQ,EAAA3C,SAAC,kBAE1B4C,EAAgBnC,KAAI,SAAChB,GAAI,OACxBG,cAAA,UAAQ8C,MAAOjD,EAAKU,GAAGH,SAAgBP,EAAKE,MAAfF,EAAKU,UAIrCwB,GACC/B,cAAA,QAAMC,UAAU,QAAOG,SAAC,4BAI5BJ,cAAA,UAAQ0C,KAAK,SAAS,UAAQ,eAActC,SAAC,YCjF7C6C,EFRS,CACb,CACE1C,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXO,OAAQ,GAEV,CACET,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXO,OAAQ,IETwBH,KAAI,SAAAP,GAAI,OAAA4C,wBAAA,GACvC5C,GAAI,IACPT,KAAMkB,EAAYT,EAAKU,aAGzB,SAASmC,EAAavC,GAGpB,OAFcwC,KAAKC,IAAGC,MAARF,KAAIG,YAAQ3C,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKC,QAElC,EAGV,IAAMiD,EAAM,WACjB,IAAAnC,EAA0BC,mBAAiB2B,GAAY1B,EAAAC,YAAAH,EAAA,GAAhDT,EAAKW,EAAA,GAAEkC,EAAQlC,EAAA,GAWtB,OACEb,eAAA,OAAKT,UAAU,MAAKG,SAAA,CAClBJ,cAAA,MAAAI,SAAI,kBAEJJ,cAACmB,EAAQ,CAACC,SAbE,SAACd,GACf,IAAMoD,EAAOR,wBAAA,GACR5C,GAAI,IACPC,GAAI4C,EAAavC,KAGnB6C,GAAS,SAAAE,GAAW,SAAAxD,OAAAoD,YAAQI,GAAW,CAAED,UAQvC1D,cAACW,EAAQ,CAACC,MAAOA,QCjCvBgD,IAASC,OAAO7D,cAACwD,EAAG,IAAKM,SAASC,eAAe,W","file":"static/js/main.9d2e60bf.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  user: User;\n};\n\nexport interface User {\n  id: number,\n  name: string,\n  email: string,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo, User } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport interface Todo {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article data-id={id} className={`TodoInfo  ${completed && 'TodoInfo--completed'}`}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      { user && <UserInfo user={user} /> }\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo, TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport { Todo } from '../TodoInfo';\nimport usersFormServer from '../../api/users';\nimport { getUserById } from '../../services/getUser';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [userNameError, setUserNameError] = useState(false);\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setUserNameError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserNameError(false);\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      action=\"/api/todos\"\n      method=\"POST\"\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleForm\">Title:</label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"titleForm\"\n          placeholder=\"Enter a title\"\n          onChange={handleTitleChange}\n          value={title}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"chooseUser\">User:</label>\n        <select\n          id=\"chooseUser\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFormServer.map((user) => (\n            <option value={user.id} key={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {userNameError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { Todo } from './components/TodoInfo';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/getUser';\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst initialTodo = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodo);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}